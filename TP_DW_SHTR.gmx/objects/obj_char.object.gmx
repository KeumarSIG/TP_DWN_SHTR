<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_char</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Char init

// Movement
m_Spd = 5;
m_CharOffsetX = sprite_width * 0.5;
m_CharOffsetY = sprite_height * 0.5;

// Shoot
m_CanShoot = true;
m_FireRate = 0;
m_FireOffset = 0;

m_CurrentWeapon = "None"; // Name of current weapon
m_CurrentWeaponNum = 0; // What is the current weapon equipped
m_WeaponNum = 0; // How many weapons are in the inventory
m_InventorySize = 3; // Max size of the inventory

m_CurrentClip = 0; // How many bullets are in the weapon right now
m_CapacityClip = 0; // How many max bullets are in the weapon
m_RemainingClip = 0; // How many clips do I have to reload
m_ReloadTime = 0;
m_IsReloading = false;

for (var i = 0 ; i &lt; m_InventorySize ; i++)
{
    m_WeaponInventory[i] = "None";
    /*m_CurrentClip[i] = 0;
    m_CapacityClip[i] = 0;
    m_RemainingClip[i] = 0;
    m_ReloadTime[i] = 0;
    m_IsReloading[i] = false;*/
}

// Life
m_DamageRecovery = room_speed * 0.5;
m_CanBeHit = true;
m_Hp = 100;

// Gamefeel
m_BulletOffset = 0;


/*
/// Char init

// Movement
m_Spd = 5;
m_CharOffsetX = sprite_width * 0.5;
m_CharOffsetY = sprite_height * 0.5;

// Shoot
m_CanShoot = true;
m_FireRate = 0;
m_FireOffset = 0;

m_CurrentWeapon = "None"; // Name of current weapon
m_CurrentWeaponNum = 0; // What is the current weapon equipped
m_WeaponNum = 0; // How many weapons are in the inventory
m_InventorySize = 3; // Max size of the inventory

m__CurrentClip = 0; // How many bullets are in the weapon right now
m__CapacityClip = 0; // How many max bullets are in the weapon
m__RemainingClip = 0; // How many clips do I have to reload
m__ReloadTime = 0;
m__IsReloading = false;

for (var i = 0 ; i &lt; m_InventorySize ; i++)
{
    m_WeaponInventory[i] = "None";
    m_CurrentClip[i] = 0;
    m_CapacityClip[i] = 0;
    m_RemainingClip[i] = 0;
    m_ReloadTime[i] = 0;
    m_IsReloading[i] = false;
}

// Life
m_DamageRecovery = room_speed * 0.5;
m_CanBeHit = true;
m_Hp = 100;

// Gamefeel
m_BulletOffset = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reload
m_CurrentClip = m_CapacityClip;
m_RemainingClip--;
m_IsReloading = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damage recovery
m_CanBeHit = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rate of fire
m_CanShoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement + shoot
scr_char_movement();
scr_char_weapon();
scr_char_shooting();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// If the player collides with an enemy
if (m_CanBeHit == true)
{
    m_Hp -= other.m_CollisionDamage; // Reduces his life
    if (m_Hp &lt;= 0) instance_destroy(); // If life &lt; 0, player dies
    
    m_CanBeHit = false; // Makes him invulnerable for a certain time
    if (!alarm[1]) alarm[1] = m_DamageRecovery; // The certain time
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Shows current health
draw_set_colour(c_white);
draw_text(32, 32, string(m_Hp) + " HP");

// Shows current weapons
draw_text(32, 64, m_CurrentWeapon);

// Shows ammos and clips
draw_text(32, 96, string(m_CurrentClip) + "/" + string(m_CapacityClip) + " ||| " + string(m_RemainingClip));

// Debug
draw_text(32, 128, string(m_CurrentWeaponNum) + " current weapon");
draw_set_colour(c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw char related things

if (m_CanBeHit == true) draw_self();

// The character has taken a damage
else 
{
    draw_self();
    draw_set_colour(c_red);
    draw_circle(x, y - 24, 4, false);
    draw_set_colour(c_black);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
